%!PS-Adobe-2.0 EPSF-2.0
%% This is a Stata generated postscript file
%%BoundingBox: 0 0 396 288
%%HiResBoundingBox: 0.000 0.000 396.000 288.000
%%DocumentNeededResources: font Helvetica
/xratio 0.012375 def
/yratio 0.012375 def
/Sbgfill {
	/y1 exch def
	/x1 exch def
	/y0 exch def
	/x0 exch def
	x0 y0 moveto
	x0 y1 lineto x1 y1 lineto x1 y0 lineto x0 y0 lineto
	fill
} def
/Spt {
	yratio mul
	/yp exch def
	xratio mul
	/xp exch def
	Slrgb setrgbcolor
	xp yp .5 0 360 arc fill
} def
/Sln {
	yratio mul
	/y1p exch def
	xratio mul
	/x1p exch def
	yratio mul
	/y0p exch def
	xratio mul
	/x0p exch def
	Slw setlinewidth
	Slrgb setrgbcolor
	x0p y0p M x1p y1p lineto S
} def
/Scrv {
	yratio mul
	/y3p exch def
	xratio mul
	/x3p exch def
	yratio mul
	/y2p exch def
	xratio mul
	/x2p exch def
	yratio mul
	/y1p exch def
	xratio mul
	/x1p exch def
	Slw setlinewidth
	Slrgb setrgbcolor
	x1p y1p x2p y2p x3p y3p curveto
	stroke
} def
/Stxtl {
	/sp exch def
	yratio mul
	/sizep exch def
	dup
	/anglep exch def
	0 exch sub
	/angle2p exch def
	yratio mul
	/y0p exch def
	xratio mul
	/x0p exch def
	Strgb setrgbcolor
	x0p y0p M anglep rotate sizep fntsize sp show stroke angle2p rotate
} def
/Stxtc {
	/sp exch def
	yratio mul
	/sizep exch def
	dup
	/anglep exch def
	0 exch sub
	/angle2p exch def
	yratio mul
	/y0p exch def
	xratio mul
	/x0p exch def
	Strgb setrgbcolor
	x0p y0p M anglep rotate sizep fntsize sp stringwidth exch -2 div exch rm sp show stroke angle2p rotate
} def
/Stxtr {
	/sp exch def
	yratio mul
	/sizep exch def
	dup
	/anglep exch def
	0 exch sub
	/angle2p exch def
	yratio mul
	/y0p exch def
	xratio mul
	/x0p exch def
	Strgb setrgbcolor
	x0p y0p M anglep rotate sizep fntsize sp stringwidth 1 index -1 mul exch rm pop sp show stroke angle2p rotate
} def
/Srect {
	/sfill exch def
	/sstroke exch def
	yratio mul
	/y1 exch def
	xratio mul
	/x1 exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	newpath x0 y0 moveto x0 y1 lineto x1 y1 lineto x1 y0 lineto x0 y0 lineto closepath
	sfill Sfill
	sstroke Sstroke
} def
/Sellipse {
	/sfill exch def
	/sstroke exch def
	yratio mul
	/yrad exch def
	xratio mul
	/xrad exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	/savematrix matrix currentmatrix def
	x y translate
	xrad yrad scale
	0 0 1 0 360 arc
	savematrix setmatrix
	sfill Sfill
	sstroke Sstroke
} def
/Stri {
	/sfill exch def
	/sstroke exch def
	xratio mul
	/r exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	/xcen x0 def
	y0 r add
	/ytop exch def
	r 2 div
	y0 exch sub
	/ybot exch def
	r 3 sqrt 2 div mul dup
	xcen exch sub
	/xleft exch def
	xcen add
	/xright exch def
	newpath xcen ytop moveto xright ybot lineto xleft ybot lineto xcen ytop lineto closepath
	sfill Sfill
	sstroke Sstroke
} def
/Soldtri {
	/sfill exch def
	xratio mul
	/r exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	x0 r sub
	/x1 exch def
	y0 r sub
	/y1 exch def
	x0 r add
	/x2 exch def
	y0 r sub
	/y2 exch def
	/x3 x0 def
	y0 r add
	/y3 exch def
	newpath x1 y1 moveto x2 y2 lineto x3 y3 lineto x1 y1 lineto closepath
	sfill 1 eq {
		Ssrgb setrgbcolor
		gsave
		fill
		grestore
	} if
	Slw setlinewidth
	Slrgb setrgbcolor
	stroke
} def
/Sdia {
	/sfill exch def
	/sstroke exch def
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x r sub
	/x0 exch def
	/y0 y def
	/x1 x def
	y r sub
	/y1 exch def
	x r add
	/x2 exch def
	/y2 y def
	/x3 x def
	y r add
	/y3 exch def
	newpath x0 y0 moveto x1 y1 lineto x2 y2 lineto x3 y3 lineto closepath
	sfill Sfill
	sstroke Sstroke
} def
/Scc {
	/sfill exch def
	/sstroke exch def
	xratio mul
	/r0 exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	x0 y0 r0 0 360 arc closepath
	sfill Sfill
	sstroke Sstroke
} def
/Spie {
	/sfill exch def
	/salign exch def
	/a1 exch def
	/a0 exch def
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	/Pie {
		x y moveto x y r a0 a1 arc closepath
	} def
	newpath Pie
	sfill Sfill
	Slrgb setrgbcolor
	salign 0 eq {
		gsave
		Slw 2 mul setlinewidth
		clip
		stroke
		grestore
	} if
	salign 1 eq {
		Slw setlinewidth
		stroke
	} if
	salign 2 eq {
		gsave
		Slw 2 mul setlinewidth
		strokepath
		pathbbox
		/ury exch def
		/urx exch def
		/lly exch def
		/llx exch def
		newpath llx lly moveto llx ury lineto urx ury lineto urx lly lineto closepath
		Pie
		eoclip
		newpath Pie
		stroke
		grestore
	} if
	newpath
} def
/Splu {
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x r sub
	/x0 exch def
	x r add
	/x1 exch def
	x0 y M x1 y L
	y r sub
	/y0 exch def
	y r add
	/y1 exch def
	x y0 M x y1 L
} def
/Scro {
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x r sub
	/x0 exch def
	y r sub
	/y0 exch def
	x r add
	/x1 exch def
	y r add
	/y1 exch def
	x0 y0 M x1 y1 L
	x r add
	/x0 exch def
	y r sub
	/y0 exch def
	x r sub
	/x1 exch def
	y r add
	/y1 exch def
	x0 y0 M x1 y1 L
} def
/Sm {
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x y M
} def
/Sl {
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x y L
} def
/SPl {
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x y PL
} def
/Sarr {
	/sfill exch def
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	y r add
	/ytop exch def
	y r sub
	/ybot exch def
	gsave
	Slrgb setrgbcolor
	sfill 0 eq {
		r 2 mul 3 div dup
		x exch sub
		/xleft exch def
		x add
		/xright exch def
		newpath xleft y moveto x ytop lineto xright y lineto x ytop moveto x ybot lineto
		Lcs
		1 setlinejoin
	} {
		r 2 div dup
		x exch sub
		/xleft exch def
		x add
		/xright exch def
		newpath xleft y moveto x ytop lineto xright y lineto x ytop closepath moveto x ybot lineto
		gsave
		fill
		grestore
	} ifelse
	Slw setlinewidth
	stroke
	grestore
} def
/Spipe {
	xratio mul
	/r exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	y r sub
	/y0 exch def
	y r add
	/y1 exch def
	x y0 M x y1 L
} def
/Sv {
	xratio mul
	/r exch def
	yratio mul
	/y0 exch def
	xratio mul
	/x0 exch def
	/xcen x0 def
	y0 r add
	/ytop exch def
	r 2 div
	y0 exch sub
	/ybot exch def
	r 3 sqrt 2 div mul dup
	xcen exch sub
	/xleft exch def
	xcen add
	/xright exch def
	newpath xleft ytop moveto xcen ybot lineto xright ytop lineto
	Slw setlinewidth
	Slrgb setrgbcolor
	stroke
} def
/Lcs {
	currentlinecap
	1 setlinecap
} def
/Lcr {
	setlinecap
} def
/Sbp {
	newpath
} def
/Sep {
	/sfill exch def
	closepath
	/salign exch def
	Lcs
	salign 0 eq {
		sfill Sfill
		gsave
		Slw 2 mul setlinewidth
		clip
		Slrgb setrgbcolor
		stroke
		grestore
	} if
	salign 1 eq {
		sfill Sfill
		Slw setlinewidth
		Slrgb setrgbcolor
		stroke
	} if
	salign 2 eq {
		gsave
		Slw 2 mul setlinewidth
		Slrgb setrgbcolor
		stroke
		grestore
		sfill Sfill
	} if
	newpath
	Lcr
} def
/Stransrot {
	/anglep exch def
	yratio mul
	/y exch def
	xratio mul
	/x exch def
	x y translate
	anglep rotate
	x neg y neg translate
} def
/cp {currentpoint} def 
/M {moveto} def 
/rm {rmoveto} def 
/S {stroke} def 
/L {Slw setlinewidth Slrgb setrgbcolor lineto Lcs S Lcr} def 
/PL {Slw setlinewidth Slrgb setrgbcolor lineto} def 
/MF-Helvetica {
  /newfontname exch def
  /fontname exch def
  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def
  fontdict {
  exch dup /FID eq {pop pop} {exch newfont 3 1 roll put} ifelse
  } forall
  newfont /FontName newfontname put
  newfont /Encoding ISOLatin1Encoding put
  newfontname newfont definefont pop
} def
/Helvetica /Helvetica-0 MF-Helvetica
/Slw 0.120 def
0.918 0.949 0.953 setrgbcolor
0 0 396.000 288.000 Sbgfill
/Sfill {
	/sfill exch def
	sfill 1 eq {
		Ssrgb setrgbcolor
		gsave
		fill
		grestore
	} if
} def
/Sstroke {
	/sstroke exch def
	sstroke 1 eq {
		Slw setlinewidth
		Slrgb setrgbcolor
		stroke
	} if
	newpath
} def
/Slrgb {1.000 1.000 1.000} def
/Strgb {1.000 1.000 1.000} def
/Ssrgb {1.000 1.000 1.000} def
/Slw 0.576 def
0 0 31999 23272 0 1 Srect
23 23 31976 23249 1 0 Srect
3359 6354 31184 22457 0 1 Srect
3382 6377 31161 22434 1 0 Srect
/Slrgb {0.000 0.000 0.000} def
/Strgb {0.000 0.000 0.000} def
/Slw 0.864 def
/Slrgb {0.878 0.878 0.878} def
3359 6866 31184 6866 Sln
/Slw 0.576 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.864 def
/Slrgb {0.878 0.878 0.878} def
3359 10523 31184 10523 Sln
/Slw 0.576 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.864 def
/Slrgb {0.878 0.878 0.878} def
3359 14180 31184 14180 Sln
/Slw 0.576 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.864 def
/Slrgb {0.878 0.878 0.878} def
3359 17837 31184 17837 Sln
/Slw 0.576 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.864 def
/Slrgb {0.878 0.878 0.878} def
3359 21493 31184 21493 Sln
/Slw 0.576 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.864 def
/Slrgb {0.878 0.878 0.878} def
3871 6354 3871 22457 Sln
/Slw 0.576 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.864 def
/Slrgb {0.878 0.878 0.878} def
15038 6354 15038 22457 Sln
/Slw 0.576 def
/Slrgb {0.000 0.000 0.000} def
/Slw 0.864 def
/Slrgb {0.878 0.878 0.878} def
26206 6354 26206 22457 Sln
/Slw 0.576 def
/Slrgb {0.000 0.000 0.000} def
/Slw 3.456 def
/Slrgb {0.502 0.502 0.502} def
6104 8898 Sm
7221 9466 Sl
7221 9466 Sm
8337 9949 Sl
8337 9949 Sm
9454 10372 Sl
9454 10372 Sm
10571 10784 Sl
10571 10784 Sm
11688 11218 Sl
11688 11218 Sm
12804 11689 Sl
12804 11689 Sm
13921 12183 Sl
13921 12183 Sm
15038 12667 Sl
15038 12667 Sm
16155 13146 Sl
16155 13146 Sm
17271 13639 Sl
17271 13639 Sm
18388 14145 Sl
18388 14145 Sm
19505 14687 Sl
19505 14687 Sm
20621 15262 Sl
20621 15262 Sm
21738 15830 Sl
21738 15830 Sm
22855 16350 Sl
22855 16350 Sm
23972 16796 Sl
23972 16796 Sm
25088 17193 Sl
25088 17193 Sm
26205 17560 Sl
26205 17560 Sm
27322 17909 Sl
27322 17909 Sm
28439 18203 Sl
28439 18203 Sm
29555 18345 Sl
29555 18345 Sm
30672 18266 Sl
/Slrgb {0.000 0.000 0.000} def
6104 9848 Sm
7221 10713 Sl
7221 10713 Sm
8337 11482 Sl
8337 11482 Sm
9454 12104 Sl
9454 12104 Sm
10571 12564 Sl
10571 12564 Sm
11688 12911 Sl
11688 12911 Sm
12804 13212 Sl
12804 13212 Sm
13921 13517 Sl
13921 13517 Sm
15038 13823 Sl
15038 13823 Sm
16155 14132 Sl
16155 14132 Sm
17271 14460 Sl
17271 14460 Sm
18388 14824 Sl
18388 14824 Sm
19505 15242 Sl
19505 15242 Sm
20621 15730 Sl
20621 15730 Sm
21738 16294 Sl
21738 16294 Sm
22855 16898 Sl
22855 16898 Sm
23972 17492 Sl
23972 17492 Sm
25088 18045 Sl
25088 18045 Sm
26205 18543 Sl
26205 18543 Sm
27322 18984 Sl
27322 18984 Sm
28439 19380 Sl
28439 19380 Sm
29555 19726 Sl
29555 19726 Sm
30672 20008 Sl
/Slw 0.864 def
6104 10135 6466 10427 Sln
6648 10573 7010 10865 Sln
7192 11010 7221 11034 Sln
7221 11034 7568 11285 Sln
7756 11421 8133 11694 Sln
8322 11830 8337 11841 Sln
8337 11841 8719 12072 Sln
8919 12192 9317 12433 Sln
9520 12546 9945 12737 Sln
10157 12832 10571 13019 Sln
10571 13019 10582 13023 Sln
10803 13095 11245 13241 Sln
11466 13314 11688 13387 Sln
11688 13387 11912 13448 Sln
12136 13509 12585 13631 Sln
12810 13692 13260 13810 Sln
13485 13870 13921 13985 Sln
13921 13985 13935 13989 Sln
14160 14048 14610 14166 Sln
14835 14225 15038 14279 Sln
15038 14279 15285 14344 Sln
15510 14403 15960 14522 Sln
16185 14582 16633 14708 Sln
16857 14771 17271 14887 Sln
17271 14887 17305 14897 Sln
17528 14966 17972 15104 Sln
18195 15173 18388 15233 Sln
18388 15233 18635 15321 Sln
18855 15399 19293 15555 Sln
19513 15634 19941 15814 Sln
20156 15905 20585 16086 Sln
20795 16187 21211 16394 Sln
21420 16498 21738 16656 Sln
21738 16656 21835 16709 Sln
22039 16821 22447 17044 Sln
22652 17156 22855 17267 Sln
22855 17267 23059 17380 Sln
23263 17492 23671 17717 Sln
23874 17829 23972 17883 Sln
23972 17883 24287 18046 Sln
24493 18152 24907 18366 Sln
25115 18471 25536 18667 Sln
25748 18765 26170 18961 Sln
26385 19050 26816 19226 Sln
27031 19314 27322 19433 Sln
27322 19433 27464 19484 Sln
27683 19563 28121 19722 Sln
28340 19801 28439 19837 Sln
28439 19837 28782 19944 Sln
29004 20014 29448 20154 Sln
29672 20216 30124 20329 Sln
30350 20385 30672 20466 Sln
6104 9561 6477 9839 Sln
6664 9978 7038 10255 Sln
7225 10394 7614 10649 Sln
7808 10777 8197 11032 Sln
8396 11154 8810 11365 Sln
9018 11471 9432 11682 Sln
9649 11766 10085 11928 Sln
10303 12009 10571 12109 Sln
10571 12109 10743 12159 Sln
10967 12224 11413 12355 Sln
11637 12420 11688 12435 Sln
11688 12435 12086 12542 Sln
12311 12603 12760 12723 Sln
12985 12786 13433 12911 Sln
13657 12974 13921 13048 Sln
13921 13048 14105 13101 Sln
14329 13165 14776 13292 Sln
15000 13356 15038 13367 Sln
15038 13367 15447 13485 Sln
15671 13550 16118 13679 Sln
16341 13747 16785 13884 Sln
17008 13952 17271 14033 Sln
17271 14033 17450 14094 Sln
17671 14169 18112 14319 Sln
18332 14395 18388 14414 Sln
18388 14414 18766 14562 Sln
18983 14647 19416 14817 Sln
19630 14909 20054 15101 Sln
20266 15197 20621 15358 Sln
20621 15358 20688 15392 Sln
20896 15499 21310 15711 Sln
21517 15817 21738 15931 Sln
21738 15931 21929 16033 Sln
22134 16143 22544 16363 Sln
22750 16473 22855 16529 Sln
22855 16529 23163 16687 Sln
23370 16793 23784 17005 Sln
23992 17110 24412 17310 Sln
24622 17409 25043 17608 Sln
25256 17702 25683 17886 Sln
25897 17977 26205 18109 Sln
26205 18109 26327 18156 Sln
26545 18239 26979 18405 Sln
27197 18488 27322 18536 Sln
27322 18536 27635 18644 Sln
27855 18720 28295 18872 Sln
28516 18945 28960 19082 Sln
29183 19151 29555 19266 Sln
29555 19266 29629 19285 Sln
29855 19342 30305 19457 Sln
30531 19514 30672 19550 Sln
/Slrgb {0.502 0.502 0.502} def
6104 9481 6512 9704 Sln
6717 9816 7125 10039 Sln
7333 10143 7756 10337 Sln
7968 10434 8337 10604 Sln
8337 10604 8391 10625 Sln
8608 10712 9039 10885 Sln
9255 10972 9454 11052 Sln
9454 11052 9688 11144 Sln
9905 11229 10338 11399 Sln
10555 11484 10571 11490 Sln
10571 11490 10985 11661 Sln
11200 11750 11630 11928 Sln
11843 12022 12268 12213 Sln
12480 12308 12804 12454 Sln
12804 12454 12903 12501 Sln
13113 12601 13533 12801 Sln
13743 12901 13921 12986 Sln
13921 12986 14163 13101 Sln
14373 13201 14793 13401 Sln
15004 13501 15038 13518 Sln
15038 13518 15422 13704 Sln
15632 13805 16051 14008 Sln
16259 14112 16673 14323 Sln
16881 14429 17271 14628 Sln
17271 14628 17295 14641 Sln
17500 14751 17910 14971 Sln
18115 15081 18388 15227 Sln
18388 15227 18522 15306 Sln
18723 15424 19124 15660 Sln
19325 15778 19505 15884 Sln
19505 15884 19721 16023 Sln
19916 16149 20307 16402 Sln
20503 16528 20621 16604 Sln
20621 16604 20891 16784 Sln
21085 16913 21472 17170 Sln
21666 17299 21738 17347 Sln
21738 17347 22055 17554 Sln
22250 17681 22640 17935 Sln
22836 18062 22855 18075 Sln
22855 18075 23233 18304 Sln
23432 18425 23830 18667 Sln
24030 18786 24433 19019 Sln
24635 19135 25037 19368 Sln
25240 19483 25645 19712 Sln
25848 19826 26205 20028 Sln
26205 20028 26253 20055 Sln
26456 20170 26861 20399 Sln
27064 20513 27322 20660 Sln
27322 20660 27470 20739 Sln
27675 20850 28085 21070 Sln
28290 21180 28439 21260 Sln
28439 21260 28713 21373 Sln
28928 21461 29359 21638 Sln
29575 21723 30031 21816 Sln
30260 21862 30672 21945 Sln
6104 8314 6525 8512 Sln
6736 8612 7157 8810 Sln
7371 8901 7802 9076 Sln
8017 9164 8337 9294 Sln
8337 9294 8450 9334 Sln
8669 9412 9107 9568 Sln
9327 9647 9454 9692 Sln
9454 9692 9766 9800 Sln
9986 9876 10426 10028 Sln
10645 10105 11082 10265 Sln
11301 10344 11688 10485 Sln
11688 10485 11738 10505 Sln
11954 10590 12387 10760 Sln
12604 10846 12804 10924 Sln
12804 10924 13036 11018 Sln
13251 11106 13682 11282 Sln
13898 11370 13921 11379 Sln
13921 11379 14331 11539 Sln
14548 11624 14981 11793 Sln
15200 11875 15635 12038 Sln
15853 12120 16155 12233 Sln
16155 12233 16289 12283 Sln
16508 12364 16944 12527 Sln
17162 12608 17271 12649 Sln
17271 12649 17598 12770 Sln
17816 12851 18252 13013 Sln
18470 13094 18905 13260 Sln
19123 13344 19505 13489 Sln
19505 13489 19557 13509 Sln
19775 13593 20208 13760 Sln
20425 13845 20621 13920 Sln
20621 13920 20863 14005 Sln
21082 14082 21521 14237 Sln
21741 14314 22189 14439 Sln
22413 14502 22855 14626 Sln
22855 14626 22861 14627 Sln
23090 14671 23547 14758 Sln
23776 14802 23972 14840 Sln
23972 14840 24235 14875 Sln
24466 14906 24927 14968 Sln
25158 14995 25621 15039 Sln
25853 15060 26205 15093 Sln
26205 15093 26317 15100 Sln
26549 15113 27013 15140 Sln
27246 15154 27322 15158 Sln
27322 15158 27711 15154 Sln
27944 15151 28409 15146 Sln
28640 15114 29099 15042 Sln
29329 15007 29555 14971 Sln
29555 14971 29778 14894 Sln
29998 14818 30438 14667 Sln
30659 14592 30672 14587 Sln
/Slrgb {0.000 0.000 0.000} def
15038 13938 399 0 1 Scc 
15038 13938 364 1 0 Scc 
/Ssrgb {0.835 0.808 0.596} def
/Slw 1.296 def
15038 15403 15038 12473 Sln
14860 12473 Sm
15216 12473 Sl
14860 15403 Sm
15216 15403 Sl
/Slw 0.576 def
Sbp
3959 16739 Sm
3959 16739 Sm
18388 16739 SPl
18388 19143 SPl
3959 19143 SPl
3959 16739 SPl
0 0 Sep
4192 18362 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 646
(ABC/CARE Eligible at a*: 24.91 \(s.e. 2.31\)) Stxtl
(ABC/CARE Eligible at a*: 24.91 \(s.e. 2.31\)) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
4192 17716 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 646
( ) Stxtl
( ) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
4192 17070 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 646
(Synthetic Cohort at a*: 27.12 \(s.e. 2.24\)) Stxtl
(Synthetic Cohort at a*: 27.12 \(s.e. 2.24\)) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
3359 6354 3359 22457 Sln
3359 6866 3036 6866 Sln
2874 6583 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(10) stringwidth pop add
xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(10) Stxtl
(10) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
3359 10523 3036 10523 Sln
2874 10240 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(20) stringwidth pop add
xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(20) Stxtl
(20) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
3359 14180 3036 14180 Sln
2874 13897 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(30) stringwidth pop add
xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(30) Stxtl
(30) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
3359 17837 3036 17837 Sln
2874 17554 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(40) stringwidth pop add
xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(40) Stxtl
(40) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
3359 21493 3036 21493 Sln
2874 21210 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(50) stringwidth pop add
xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(50) Stxtl
(50) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
1542 14406 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(Labor Income \(1000s 2014 USD\)) stringwidth pop add
2 div xratio div
dup 4 3 roll exch 90.000 cos mul sub 3 1 roll 90.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
90.000 808
(Labor Income \(1000s 2014 USD\)) Stxtl
(Labor Income \(1000s 2014 USD\)) stringwidth pop xratio div
dup 4 3 roll exch 90.000 cos mul add 3 1 roll 90.000 sin mul add 2 copy
pop pop pop pop
3359 6354 31184 6354 Sln
3871 6354 3871 6031 Sln
3871 5303 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(20) stringwidth pop add
2 div xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(20) Stxtl
(20) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
15038 6354 15038 6031 Sln
/Symbol findfont
		dup length dict begin
		{1 index /FID ne {def} {pop pop} ifelse} forall
		currentdict
end
/MF-Symbol {
  /newfontname exch def
  /fontname exch def
  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def
  fontdict {
  exch dup /FID eq {pop pop} {exch newfont 3 1 roll put} ifelse
  } forall
  newfont /FontName newfontname put
  newfontname newfont definefont pop
} def
/Symbol /Symbol-0 MF-Symbol
15038 5303 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(Interpolation ) stringwidth pop add
/Symbol-0 findfont 808 yratio mul scalefont setfont
(\254) stringwidth pop add
/Helvetica-0 findfont 808 yratio mul scalefont setfont
( a* ) stringwidth pop add
/Symbol-0 findfont 808 yratio mul scalefont setfont
(\256) stringwidth pop add
/Helvetica-0 findfont 808 yratio mul scalefont setfont
( Extrapolation) stringwidth pop add
2 div xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(Interpolation ) Stxtl
(Interpolation ) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Symbol-0 findfont exch scalefont setfont } def
0.000 808
(\254) Stxtl
(\254) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
( a* ) Stxtl
( a* ) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Symbol-0 findfont exch scalefont setfont } def
0.000 808
(\256) Stxtl
(\256) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
( Extrapolation) Stxtl
( Extrapolation) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
26206 6354 26206 6031 Sln
26206 5303 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(40) stringwidth pop add
2 div xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(40) Stxtl
(40) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
17272 4414 0
/Helvetica-0 findfont 808 yratio mul scalefont setfont
(Age) stringwidth pop add
2 div xratio div
dup 4 3 roll exch 0.000 cos mul sub 3 1 roll 0.000 sin mul sub 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 808
(Age) Stxtl
(Age) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
/Ssrgb {1.000 1.000 1.000} def
3638 1094 30905 3731 0 1 Srect
3661 1117 30882 3708 1 0 Srect
/Slw 3.456 def
/Slrgb {0.502 0.502 0.502} def
3987 2978 6816 2978 Sln
/Slrgb {0.000 0.000 0.000} def
14382 2978 17210 2978 Sln
/Slw 0.864 def
25807 2978 26272 2978 Sln
26505 2978 26970 2978 Sln
27203 2978 27668 2978 Sln
27901 2978 28366 2978 Sln
28599 2978 28635 2978 Sln
5402 1847 399 0 1 Scc 
5402 1847 364 1 0 Scc 
/Ssrgb {0.835 0.808 0.596} def
/Slw 1.296 def
14382 1847 17210 1847 Sln
14382 1669 14382 2025 Sln
17210 1669 17210 2025 Sln
/Helvetica-Bold findfont
		dup length dict begin
		{1 index /FID ne {def} {pop pop} ifelse} forall
		/Encoding ISOLatin1Encoding def
		currentdict
end
/MF-Helvetica-Bold {
  /newfontname exch def
  /fontname exch def
  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def
  fontdict {
  exch dup /FID eq {pop pop} {exch newfont 3 1 roll put} ifelse
  } forall
  newfont /FontName newfontname put
  newfont /Encoding ISOLatin1Encoding put
  newfontname newfont definefont pop
} def
/Helvetica-Bold /Helvetica-Bold-0 MF-Helvetica-Bold
7269 2808 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 485
(ABC/CARE Eligible \() Stxtl
(ABC/CARE Eligible \() stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-Bold-0 findfont exch scalefont setfont } def
0.000 485
(B) Stxtl
(B) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 485
( ) Stxtl
( ) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Symbol-0 findfont exch scalefont setfont } def
0.000 485
(\316) Stxtl
(\316) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 485
( ) Stxtl
( ) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Symbol-0 findfont exch scalefont setfont } def
0.000 485
(B) Stxtl
(B) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
-69 dup 4 3 roll exch 0.000 sin mul sub 3 1 roll 0.000 cos mul add
0.000 282
(0) Stxtl
(0) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 485
(\)) Stxtl
(\)) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
17663 2808 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 485
(Synthetic Cohort-Matching Based) Stxtl
(Synthetic Cohort-Matching Based) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
29089 2808 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 485
(+/- s.e.) Stxtl
(+/- s.e.) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
7269 1677 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 485
(Control Observed) Stxtl
(Control Observed) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
17663 1677 2 copy
/fntsize {/Helvetica-0 findfont exch scalefont setfont } def
0.000 485
(Observed +/- s.e.) Stxtl
(Observed +/- s.e.) stringwidth pop xratio div
dup 4 3 roll exch 0.000 cos mul add 3 1 roll 0.000 sin mul add 2 copy
pop pop pop pop
S showpage
%%EOF
